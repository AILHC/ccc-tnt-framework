
// Kawase 模糊

CCEffect %{
  techniques:
  - passes:
    - vert: vs:vert
      frag: fs:frag
      depthStencilState:
        depthTest: false
        depthWrite: false
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendDstAlpha: one_minus_src_alpha
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
        resolution: { value: [500, 500] }
        offset: { value: [1.0, 1.0] }
}%

CCProgram vs %{
  precision highp float;
  #include <builtin/uniforms/cc-global>
  #if USE_LOCAL
    #include <builtin/uniforms/cc-local>
  #endif
  
  #if SAMPLE_FROM_RT
    #include <common/common-define>
  #endif

  in vec3 a_position;
  in vec2 a_texCoord;
  in vec4 a_color;

  out vec4 color;
  out vec2 uv0;

  vec4 vert () {
    vec4 pos = vec4(a_position, 1);

    #if USE_LOCAL
      pos = cc_matWorld * pos;
    #endif

      pos = cc_matViewProj * pos;

    uv0 = a_texCoord;

    #if SAMPLE_FROM_RT
      CC_HANDLE_RT_SAMPLE_FLIP(uv0);
    #endif

    color = a_color;

    return pos;
  }
}%

CCProgram fs %{
  precision highp float;
  #include <builtin/internal/alpha-test>

  in vec4 color;

  #if USE_TEXTURE
    in vec2 uv0;
    #pragma builtin(local)
    layout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;


    uniform BlurParams{
      vec2 resolution;
      vec2 offset;
    };
    
    #if ENABLE_BLUR
      // 模糊函数
      vec4 kawaseBlur(sampler2D tex, vec2 uv, vec2 texelSize, vec2 offset) {
        vec4 o = vec4(0);
        o += texture(tex, uv + vec2(offset.x + 0.5, offset.y + 0.5) * texelSize); 
        o += texture(tex, uv + vec2(-offset.x - 0.5, offset.y + 0.5) * texelSize); 
        o += texture(tex, uv + vec2(-offset.x - 0.5, -offset.y - 0.5) * texelSize); 
        o += texture(tex, uv + vec2(offset.x + 0.5, -offset.y - 0.5) * texelSize); 
        return o * 0.25;
      }
    #endif
  #endif
  vec4 frag () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
      #if ENABLE_BLUR 
        // 启用模糊
        o *= kawaseBlur(cc_spriteTexture,uv0,1.0/resolution,offset);
      #else
        o *= texture(cc_spriteTexture, uv0);
      #endif
      
      #if IS_GRAY
        float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;
        o.r = o.g = o.b = gray;
      #endif
    #endif
    
    o *= color;
    ALPHA_TEST(o);
    return o;
  }
}%
